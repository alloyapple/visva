package com.samsung.android.alwayssocial.object.facebook;

import java.util.ArrayList;
import java.util.List;

import android.annotation.SuppressLint;
import com.google.gson.annotations.SerializedName;
import com.samsung.android.alwayssocial.object.ResponseBase;

@SuppressLint("DefaultLocale")
public class FacebookFeedWrapper extends ResponseBase{
    public enum TypeTimeline {
        LINK,
        STATUS,
        PHOTO,
        VIDEO,
        DEFAULT
    }

    public int mCommentCount = -1;
    public int mLikeCount = -1;

    // The post ID
    @SerializedName("id")
    public String id;

    //Information about the user who posted the message
    @SerializedName("from")
    public User from;

    // Profiles mentioned or targeted in this post
    @SerializedName("to")
    public To to;

    public To getTo() {
        return to;
    }

    public static class To {
        @SerializedName("data")
        List<User> users;

        public List<User> getUsers() {
            return users;
        }
    }

    // The message
    @SerializedName("message")
    public String message;

    @SerializedName("message_tags")
    public Object message_tags;

    //    // Objects tagged in the message (Users, Pages, etc)
    //    @SerializedName("message_tags")
    //    List<MessageTag> message_tags;

    // If available, a link to the picture included with this post
    @SerializedName("picture")
    public String picture;

    // The link attached to this post
    @SerializedName("link")
    public String link;

    // The name of the link
    @SerializedName("name")
    public String name;

    // The caption of the link (appears beneath the link name)
    @SerializedName("caption")
    public String caption;

    // A description of the link (appears beneath the link caption)
    @SerializedName("description")
    public String description;

    // A URL to a Flash movie or video file to be embedded within the post
    @SerializedName("source")
    public String source;

    /*A list of properties for an uploaded video, for example, the length of the vide
    @SerializedName("properties")
    public ArrayList<Object> properties; */

    //    // A list of properties for an uploaded video, for example, the length of the video
    //    @SerializedName("properties")
    //    Object properties;

    // A link to an icon representing the type of this post
    @SerializedName("icon")
    public String icon;

    // A list of available actions on the post (including commenting, liking, and an optional app-specified action)
    @SerializedName("actions")
    public List<Action> actions;

    // The privacy settings of the Post
    @SerializedName("privacy")
    public Privacy privacy;

    // A string indicating the type for this post (including link, photo, video)
    @SerializedName("type")
    public String type;

    //    // Location associated with a Post, if any
    //    @SerializedName("place")
    //    Object place;

    // Text of stories not intentionally generated by users, such as those generated when two users become friends
    @SerializedName("story")
    public String story;

    //    // Objects (Users, Pages, etc) tagged in a non-intentional story
    //    @SerializedName("story_tags")
    //    List<Action> story_tags;
    //
    //    // Objects (Users, Pages, etc) tagged as being with the publisher of the post ('Who are you with?' on Facebook)
    //    @SerializedName("with_tags")
    //    Object with_tags;
    //
    // Comments for this post
    @SerializedName("comments")
    public Comments comments;

    public Comments getComments() {
        return comments;
    }

    public static class Comments {
        @SerializedName("data")
        List<Comment> data;

        public List<Comment> getData() {
            return data;
        }

        public LikeCommentPaging paging;

        public void setData(List<Comment> data) {
            this.data = data;
        }

        public int getTotalCount() {
            return null != data ? data.size() : 0;
        }
    }

    // The Facebook object id for an uploaded photo or video
    @SerializedName("object_id")
    public String object_id;

    public Object getMessage_tags() {
        return message_tags;
    }

    public void setMessage_tags(Object message_tags) {
        this.message_tags = message_tags;
    }

    public List<Action> getActions() {
        return actions;
    }

    public void setActions(List<Action> actions) {
        this.actions = actions;
    }

    public Privacy getPrivacy() {
        return privacy;
    }

    public void setPrivacy(Privacy privacy) {
        this.privacy = privacy;
    }

    public String getObject_id() {
        return object_id;
    }

    public void setObject_id(String object_id) {
        this.object_id = object_id;
    }

    public Application getApplication() {
        return application;
    }

    public void setApplication(Application application) {
        this.application = application;
    }

    public Likes getLikes() {
        return likes;
    }

    public void setLikes(Likes likes) {
        this.likes = likes;
    }

    public boolean isInclude_hidden() {
        return include_hidden;
    }

    public void setInclude_hidden(boolean include_hidden) {
        this.include_hidden = include_hidden;
    }

    public String getCreated_time() {
        return created_time;
    }

    public void setTo(To to) {
        this.to = to;
    }

    public void setComments(Comments comments) {
        this.comments = comments;
    }

    // Information about the application this post came from
    @SerializedName("application")
    public Application application;

    public static class Application {
        public String id;
        public String name;
        public String namespace;

        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }

        public String getName() {
            return name;
        }

        public void setName(String name) {
            this.name = name;
        }

        public String getNamespace() {
            return namespace;
        }

        public void setNamespace(String namespace) {
            this.namespace = namespace;
        }

    }

    // The likes on this post.
    @SerializedName("likes")
    Likes likes;

    public static class Likes {
        @SerializedName("data")
        public ArrayList<User> data;
        @SerializedName("paging")
        public LikeCommentPaging paging;
        @SerializedName("next")
        public String next;

        public ArrayList<User> getData() {
            return data;
        }

        public void setData(ArrayList<User> data) {
            this.data = data;
        }

        public LikeCommentPaging getPaging() {
            return paging;
        }

        public void setPaging(LikeCommentPaging paging) {
            this.paging = paging;
        }

        public String getNext() {
            return next;
        }

        public void setNext(String next) {
            this.next = next;
        }

    }

    // The time the post was initially published
    @SerializedName("created_time")
    public String created_time;

    // The time of the last comment on this post
    @SerializedName("updated_time")
    public String updated_time;

    // The number of times this post has been shared
    //    @SerializedName("shares")
    //    int shares;

    // Whether to include posts that have been set to Hidden from Timeline
    @SerializedName("include_hidden")
    boolean include_hidden;

    // Type of post
    // One of mobile_status_update, created_note, added_photos, added_video, shared_story, created_group, created_event, wall_post, app_created_story, published_story, tagged_in_photo, approved_friend
    @SerializedName("status_type")
    public String status_type;

    static class Privacy {
        String value;
    }

    static class Data {
        static List<User> users;
    }

    public static class User {
        public String id;
        public String name;
        @SerializedName("category")
        public String category;

        public String getCategory() {
            if (null == category)
                return "";
            return category;
        }

        public void setCategory(String category) {
            this.category = category;
        }

        public String getName() {
            return name;
        }

        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }

        public void setName(String name) {
            this.name = name;
        }

    }

    public static class Comment {
        String id;
        User from;
        String message;
        String created_time;
        boolean user_likes;
        int like_count;
        boolean can_remove;

        //        ArrayList<MessageTag> message_tags;
        //        public LikeCommentPaging paging;

        public String getId() {
            return id;
        }

        public void setId(String id) {
            this.id = id;
        }

        public User getFrom() {
            return from;
        }

        public void setFrom(User from) {
            this.from = from;
        }

        public String getMessage() {
            return message;
        }

        public void setMessage(String message) {
            this.message = message;
        }

        public String getCreated_time() {
            return created_time;
        }

        public void setCreated_time(String created_time) {
            this.created_time = created_time;
        }

        public boolean isUser_likes() {
            return user_likes;
        }

        public void setUser_likes(boolean user_likes) {
            this.user_likes = user_likes;
        }

        public int getLike_count() {
            return like_count;
        }

        public void setLike_count(int like_count) {
            this.like_count = like_count;
        }

        public boolean isCan_remove() {
            return can_remove;
        }

        public void setCan_remove(boolean can_remove) {
            this.can_remove = can_remove;
        }

        //        public ArrayList<MessageTag> getMessage_tags() {
        //            return message_tags;
        //        }
        //
        //        public void setMessage_tags(ArrayList<MessageTag> message_tags) {
        //            this.message_tags = message_tags;
        //        }
    }

    public class LikeCommentPaging {
        @SerializedName("cursors")
        public Cursor cursors;

        @SerializedName("previous")
        public String previous;

        @SerializedName("next")
        public String next;

        public class Cursor {
            @SerializedName("after")
            public String after;
            @SerializedName("before")
            public String before;
        }
    }

    public static class MessageTag extends User {
        int length;
        int offset;
        int type;
    }

    public static class Action {
        String name;
        String link;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public User getFrom() {
        return from;
    }

    public void setFrom(User from) {
        this.from = from;
    }

    //    public FacebookUser getTo() {
    //        return to;
    //    }

    //    public void setTo(FacebookUser to) {
    //        this.to = to;
    //    }

    public String getMessage() {
        if (message != null) {
            return message;
        }
        if (story != null) {
            return story;
        } else
            return "";
    }

    public void setMessage(String message) {
        this.message = message;
    }

    //    public List<MessageTag> getMessage_tags() {
    //        return message_tags;
    //    }

    //    public void setMessage_tags(List<MessageTag> message_tags) {
    //        this.message_tags = message_tags;
    //    }

    public String getPicture() {
        if(null == picture)
            return "";
        return picture;
    }

    public void setPicture(String picture) {
        this.picture = picture;
    }

    public String getLink() {
        if(null == link)
            return "";
        return link;
    }

    public void setLink(String link) {
        this.link = link;
    }

    public String getName() {
        if (null == name)
            return "";
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getCaption() {
        if (null == caption)
            return "";
        return caption;
    }

    public void setCaption(String caption) {
        this.caption = caption;
    }

    public String getDescription() {
        if(null == description)
            return "";
        return description;
    }

    public void setDescription(String description) {
        this.description = description;
    }

    public String getSource() {
        return source;
    }

    public void setSource(String source) {
        this.source = source;
    }

    //    public Object getProperties() {
    //        return properties;
    //    }

    //    public void setProperties(Object properties) {
    //        this.properties = properties;
    //    }

    public String getIcon() {
        if (null == icon)
            return "";
        return icon;
    }

    public void setIcon(String icon) {
        this.icon = icon;
    }

    //    public List<Action> getActions() {
    //        return actions;
    //    }
    //
    //    public void setActions(List<Action> actions) {
    //        this.actions = actions;
    //    }

    //    public String getPrivacy() {
    //        return privacy;
    //    }
    //
    //    public void setPrivacy(String privacy) {
    //        this.privacy = privacy;
    //    }

    public TypeTimeline getType() {
        if (null == type)
            return TypeTimeline.DEFAULT;
        if (type.equals("link"))
            return TypeTimeline.LINK;
        if (type.equals("status"))
            return TypeTimeline.STATUS;
        if (type.equals("photo"))
            return TypeTimeline.PHOTO;
        if (type.equals("video"))
            return TypeTimeline.VIDEO;
        return TypeTimeline.DEFAULT;
    }

    public void setType(String type) {
        String myType = type.toLowerCase();
        this.type = myType;
    }

    //    public Object getPlace() {
    //        return place;
    //    }
    //
    //    public void setPlace(Object place) {
    //        this.place = place;
    //    }

    public String getStory() {
        if (null == story)
            return "";
        return story;
    }

    public void setStory(String story) {
        this.story = story;
    }

    //    public List<Action> getStory_tags() {
    //        return story_tags;
    //    }
    //
    //    public void setStory_tags(List<Action> story_tags) {
    //        this.story_tags = story_tags;
    //    }
    //
    //    public Object getWith_tags() {
    //        return with_tags;
    //    }
    //
    //    public void setWith_tags(Object with_tags) {
    //        this.with_tags = with_tags;
    //    }
    //
    //    public List<Comment> getComments() {
    //        return comments;
    //    }
    //
    //    public void setComments(List<Comment> comments) {
    //        this.comments = comments;
    //    }
    //
    //    public int getObject_id() {
    //        return object_id;
    //    }
    //
    //    public void setObject_id(int object_id) {
    //        this.object_id = object_id;
    //    }

    //    public Object getApplication() {
    //        return application;
    //    }
    //
    //    public void setApplication(Object application) {
    //        this.application = application;
    //    }

    public String getCreateDate() {
        return created_time;
    }

    public void setCreated_time(String created_time) {
        this.created_time = created_time;
    }

    public String getUpdated_time() {
        if (null == updated_time)
            return "";
        return updated_time;
    }

    public void setUpdated_time(String updated_time) {
        this.updated_time = updated_time;
    }

    //    public int getShares() {
    //        return shares;
    //    }
    //
    //    public void setShares(int shares) {
    //        this.shares = shares;
    //    }
    //
    //    public boolean isInclude_hidden() {
    //        return include_hidden;
    //    }
    //
    //    public void setInclude_hidden(boolean include_hidden) {
    //        this.include_hidden = include_hidden;
    //    }

    public String getStatus_type() {
        if (null == status_type)
            return "";
        return status_type;
    }

    public void setStatus_type(String status_type) {
        this.status_type = status_type;
    }

    /**
     * get total likes count of a post
     * @return totalLikeCount
     */
    public int getLikesCount() {
        //        if (likes != null){
        //            return  likes.getTotalCount();
        //        }
        return 0;
    }

    /**
     * Get total comment count of a post
     * @return total comment count
     */
    public int getCommentsCount() {
        if (comments != null)
            return comments.getTotalCount();
        return 0;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + id.hashCode();
        return result;

    }

    @Override
    public boolean equals(Object o) {
        if (o instanceof FacebookFeedWrapper) {
            if (this.getId().equals(((FacebookFeedWrapper) o).getId()))
                return true;
        }
        return false;
    }

}
